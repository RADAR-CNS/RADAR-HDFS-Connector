---
version: '2.1'

services:
  #---------------------------------------------------------------------------#
  # Zookeeper Cluster                                                         #
  #---------------------------------------------------------------------------#
  zookeeper-1:
    image: confluentinc/cp-zookeeper:${CONFLUENT_VERSION}
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 1000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SERVERS: zookeeper-1:2888:3888

  #---------------------------------------------------------------------------#
  # Kafka Cluster                                                             #
  #---------------------------------------------------------------------------#
  kafka-1:
    image: confluentinc/cp-kafka:${CONFLUENT_VERSION}
    depends_on:
      - zookeeper-1
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-1:9092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_GROUP_MIN_SESSION_TIMEOUT_MS: 5000
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0

  kafka-2:
    image: confluentinc/cp-kafka:${CONFLUENT_VERSION}
    depends_on:
      - zookeeper-1
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-2:9092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_GROUP_MIN_SESSION_TIMEOUT_MS: 5000
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0

  kafka-3:
    image: confluentinc/cp-kafka:5.1.2
    depends_on:
      - zookeeper-1
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-3:9092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_GROUP_MIN_SESSION_TIMEOUT_MS: 5000
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0

  #---------------------------------------------------------------------------#
  # Schema Registry                                                           #
  #---------------------------------------------------------------------------#
  schema-registry-1:
    image: confluentinc/cp-schema-registry:${CONFLUENT_VERSION}
    depends_on:
      - zookeeper-1
      - kafka-1
      - kafka-2
      - kafka-3
    restart: always
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: zookeeper-1:2181
      SCHEMA_REGISTRY_HOST_NAME: schema-registry-1
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
      SCHEMA_REGISTRY_AVRO_COMPATIBILITY_LEVEL: none
      KAFKA_GROUP_MIN_SESSION_TIMEOUT_MS: 5000

  #---------------------------------------------------------------------------#
  # REST proxy                                                                #
  #---------------------------------------------------------------------------#
  rest-proxy-1:
    image: confluentinc/cp-kafka-rest:${CONFLUENT_VERSION}
    depends_on:
      - kafka-1
      - kafka-2
      - kafka-3
      - schema-registry-1
    ports:
      - "8082:8082"
    environment:
      KAFKA_REST_ZOOKEEPER_CONNECT: zookeeper-1:2181
      KAFKA_REST_LISTENERS: http://0.0.0.0:8082
      KAFKA_REST_SCHEMA_REGISTRY_URL: http://schema-registry-1:8081
      KAFKA_REST_HOST_NAME: rest-proxy-1
      KAFKA_GROUP_MIN_SESSION_TIMEOUT_MS: 5000
      KAFKA_AUTO_COMMIT_INTERVAL_MS: 300

  #---------------------------------------------------------------------------#
  # RADAR Cold Storage                                                        #
  #---------------------------------------------------------------------------#
  hdfs-datanode-1:
    image: uhopper/hadoop-datanode:2.7.2
    restart: always
    depends_on:
      - hdfs-namenode
    environment:
      CORE_CONF_fs_defaultFS: hdfs://hdfs-namenode:8020

  hdfs-datanode-2:
    image: uhopper/hadoop-datanode:2.7.2
    restart: always
    depends_on:
      - hdfs-namenode
    environment:
      CORE_CONF_fs_defaultFS: hdfs://hdfs-namenode:8020

  hdfs-namenode:
    image: uhopper/hadoop-namenode:2.7.2
    restart: always
    ports:
      - "8020:8020"
    environment:
      CLUSTER_NAME: radar-base
      HDFS_CONF_dfs_replication: 2
      HDFS_CONF_dfs_namenode_name_dir: file:///hadoop/dfs/name

  #---------------------------------------------------------------------------#
  # RADAR HDFS connector                                                     #
  #---------------------------------------------------------------------------#
  radar-hdfs-connector:
    build:
      context: ../../..
      args:
        CONFLUENT_VERSION: ${CONFLUENT_VERSION}
    restart: on-failure
    volumes:
      - ./sink-hdfs.properties:/etc/kafka-connect/sink-hdfs.properties
    depends_on:
      - zookeeper-1
      - kafka-1
      - kafka-2
      - kafka-3
      - schema-registry-1
      - hdfs-datanode-1
      - hdfs-namenode
    environment:
      CONNECT_BOOTSTRAP_SERVERS: PLAINTEXT://kafka-1:9092,PLAINTEXT://kafka-2:9092,PLAINTEXT://kafka-3:9092
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: "default"
      CONNECT_CONFIG_STORAGE_TOPIC: "default.config"
      CONNECT_OFFSET_STORAGE_TOPIC: "default.offsets"
      CONNECT_STATUS_STORAGE_TOPIC: "default.status"
      CONNECT_KEY_CONVERTER: "io.confluent.connect.avro.AvroConverter"
      CONNECT_VALUE_CONVERTER: "io.confluent.connect.avro.AvroConverter"
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: "http://schema-registry-1:8081"
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: "http://schema-registry-1:8081"
      CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_OFFSET_STORAGE_FILE_FILENAME: "/tmp/connect2.offset"
      CONNECT_REST_ADVERTISED_HOST_NAME: "radar-hdfs-connector"
      CONNECT_ZOOKEEPER_CONNECT: zookeeper-1:2181
      CONNECTOR_PROPERTY_FILE_PREFIX: "sink-hdfs"

      KAFKA_HEAP_OPTS: "-Xms256m -Xmx768m"
      KAFKA_BROKERS: 3
      CONNECT_LOG4J_LOGGERS: "org.reflections=ERROR"
